{"version":3,"sources":["ui-component/cards/Post/Comment/Reply/index.js","ui-component/cards/Post/Comment/index.js","ui-component/extended/ImageList.js","ui-component/cards/Post/index.js","views/application/users/social-profile/Profile.js","ui-component/cards/FollowerCard.js","views/application/users/social-profile/Followers.js","ui-component/cards/FriendsCard.js","views/application/users/social-profile/Friends.js","ui-component/cards/GalleryCard.js","views/application/users/social-profile/Gallery.js","ui-component/cards/FriendRequestCard.js","views/application/users/social-profile/FriendRequest.js","ui-component/extended/Chip.js","ui-component/cards/Skeleton/ImagePlaceholder.js","views/application/users/social-profile/index.js"],"names":["avatarImage","require","Reply","commentId","handleReplayLikes","onReply","postId","reply","theme","useTheme","id","useState","anchorEl","setAnchorEl","handleClose","replies","Object","keys","length","Grid","item","xs","Box","sx","pl","Card","background","palette","mode","dark","main","grey","padding","mt","container","spacing","wrap","alignItems","Avatar","width","height","size","alt","src","profile","avatar","default","zeroMinWidth","Typography","align","variant","component","name","opacity","m","time","ButtonBase","borderRadius","onClick","event","currentTarget","typography","commonAvatar","smallAvatar","secondary","light","color","zIndex","transition","fontSize","Menu","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","data","comment","Stack","direction","Button","startIcon","likes","like","value","validationSchema","yup","shape","required","FormInput","bug","label","others","control","useFormContext","isError","errorMessage","prototype","hasOwnProperty","call","message","as","TextField","defaultValue","fullWidth","InputLabelProps","className","error","FormHelperText","Comment","handleCommentLikes","replyAdd","user","matchesXS","useMediaQuery","breakpoints","down","openReply","setOpenReply","handleChangeReply","prev","repliesResult","map","index","methods","useForm","resolver","yupResolver","handleSubmit","errors","reset","onSubmit","a","replyId","uniqueId","newReply","pt","Collapse","in","sm","ml","display","InputProps","startAdornment","InputAdornment","position","AnimateButton","type","srcset","image","rows","cols","ImageList","itemData","customization","useSelector","state","transform","overflowY","mb","gap","featured","ImageListItem","overflow","srcSet","img","title","loading","ImageListItemBar","actionPosition","Post","commentAdd","handlePostLikes","post","anchorSharedEl","setAnchorSharedEl","handleSharedClose","comments","openComment","setOpenComment","handleChangeComment","commentsResult","newComment","MainCard","body1","remarkPlugins","gfm","content","images","video","CardMedia","justifyContent","fontWeight","IconButton","marginRight","Profile","posts","setPosts","getPost","axios","get","response","useEffect","editPost","key","then","replayId","sideAvatarSX","border","gridSpacing","md","bgcolor","primary","borderColor","Divider","margin","text","textOverflow","whiteSpace","mr","verticalAlign","textDecoration","Link","href","target","underline","orange","placeholder","multiline","renderPost","FollowerCard","follow","location","avatarProfile","cursor","ListItemIcon","Followers","followers","setFollowers","getFollowers","search","setSearch","handleSearch","newString","results","followersResult","follower","lg","OutlinedInput","onChange","stroke","FriendsCard","btnSX","paper","p","Tooltip","placement","Friends","friends","setFriends","getFriends","friendsResult","friend","xl","backImage","GalleryCard","dateTime","backProfile","CardContent","pb","mediumAvatar","Gallery","gallery","setGallery","getGallery","galleryResult","FriendRequestCard","mutual","FriendRequest","friendRequest","setFriendRequest","getFriendRequest","friendRequestResult","Chip","chipcolor","disabled","defaultSX","outlineSX","success","warning","SX","ImagePlaceholder","Skeleton","animation","TabPanel","children","other","role","hidden","tabOptions","to","icon","SocialProfile","selectedTab","useParams","tab","setValue","isLoading","setLoading","contentSX","paddingBottom","textAlign","Cover","User1","Tabs","newValue","marginTop","minHeight","minWidth","py","px","flexDirection","marginBottom","option","Tab","a11yProps"],"mappings":"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","file":"static/js/16.50415362.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, ButtonBase, Card, Grid, Menu, MenuItem, Stack, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from 'ui-component/extended/Avatar';\r\n\r\n// assets\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\r\nimport ThumbUpAltTwoToneIcon from '@mui/icons-material/ThumbUpAltTwoTone';\r\nimport ReplyTwoToneIcon from '@mui/icons-material/ReplyTwoTone';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\n// ==============================|| POST & COMMENT - REPLAY ||============================== //\r\n\r\nconst Reply = ({ commentId, handleReplayLikes, onReply, postId, reply }) => {\r\n    const theme = useTheme();\r\n    const { id } = reply;\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event?.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const replies = reply;\r\n\r\n    return (\r\n        <>\r\n            {Object.keys(replies).length > 0 && (\r\n                <Grid item xs={12}>\r\n                    <Box sx={{ pl: 6.25 }}>\r\n                        <Card\r\n                            sx={{\r\n                                background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n                                padding: '16px 16px 8px',\r\n                                mt: 1.25\r\n                            }}\r\n                        >\r\n                            <Grid container spacing={1}>\r\n                                <Grid item xs={12}>\r\n                                    <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={1}>\r\n                                        <Grid item>\r\n                                            <Avatar\r\n                                                sx={{ width: 24, height: 24 }}\r\n                                                size=\"sm\"\r\n                                                alt=\"User 1\"\r\n                                                src={\r\n                                                    replies.profile &&\r\n                                                    replies.profile.avatar &&\r\n                                                    avatarImage(`./${replies.profile.avatar}`).default\r\n                                                }\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Grid container alignItems=\"center\" spacing={1}>\r\n                                                <Grid item>\r\n                                                    <Typography align=\"left\" variant=\"h5\" component=\"div\">\r\n                                                        {replies.profile.name}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                                <Grid item>\r\n                                                    <Typography align=\"left\" variant=\"caption\">\r\n                                                        <FiberManualRecordIcon\r\n                                                            sx={{ width: '10px', height: '10px', opacity: 0.5, m: '0 5px' }}\r\n                                                        />{' '}\r\n                                                        {replies.profile.time}\r\n                                                    </Typography>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <ButtonBase sx={{ borderRadius: '12px' }} onClick={handleClick}>\r\n                                                <Avatar\r\n                                                    variant=\"rounded\"\r\n                                                    sx={{\r\n                                                        ...theme.typography.commonAvatar,\r\n                                                        ...theme.typography.smallAvatar,\r\n                                                        background:\r\n                                                            theme.palette.mode === 'dark'\r\n                                                                ? theme.palette.dark.main\r\n                                                                : theme.palette.secondary.light,\r\n                                                        color:\r\n                                                            theme.palette.mode === 'dark'\r\n                                                                ? theme.palette.dark.light\r\n                                                                : theme.palette.secondary.dark,\r\n                                                        zIndex: 1,\r\n                                                        transition: 'all .2s ease-in-out',\r\n                                                        '&[aria-controls=\"menu-list-grow\"],&:hover': {\r\n                                                            background: theme.palette.secondary.main,\r\n                                                            color: theme.palette.secondary.light\r\n                                                        }\r\n                                                    }}\r\n                                                    aria-controls=\"menu-comment-reply\"\r\n                                                    aria-haspopup=\"true\"\r\n                                                >\r\n                                                    <MoreVertTwoToneIcon fontSize=\"inherit\" />\r\n                                                </Avatar>\r\n                                            </ButtonBase>\r\n                                            <Menu\r\n                                                id=\"menu-comment-reply\"\r\n                                                anchorEl={anchorEl}\r\n                                                keepMounted\r\n                                                open={Boolean(anchorEl)}\r\n                                                onClose={handleClose}\r\n                                                variant=\"selectedMenu\"\r\n                                                anchorOrigin={{\r\n                                                    vertical: 'bottom',\r\n                                                    horizontal: 'right'\r\n                                                }}\r\n                                                transformOrigin={{\r\n                                                    vertical: 'top',\r\n                                                    horizontal: 'right'\r\n                                                }}\r\n                                            >\r\n                                                <MenuItem onClick={handleClose}>Edit</MenuItem>\r\n                                                <MenuItem onClick={handleClose}>Delete</MenuItem>\r\n                                            </Menu>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Typography align=\"left\" variant=\"body2\">\r\n                                        {replies.data.comment}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Stack\r\n                                        direction=\"row\"\r\n                                        spacing={2}\r\n                                        sx={{ color: theme.palette.mode === 'dark' ? 'grey.700' : 'grey.800' }}\r\n                                    >\r\n                                        <Button\r\n                                            onClick={() => handleReplayLikes(postId, commentId, id)}\r\n                                            variant=\"text\"\r\n                                            color=\"inherit\"\r\n                                            size=\"small\"\r\n                                            startIcon={\r\n                                                <ThumbUpAltTwoToneIcon\r\n                                                    color={replies.data.likes && replies.data.likes.like ? 'secondary' : 'inherit'}\r\n                                                />\r\n                                            }\r\n                                        >\r\n                                            {replies.data.likes && replies.data.likes.value ? replies.data.likes.value : 0} likes\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"text\"\r\n                                            onClick={onReply}\r\n                                            size=\"small\"\r\n                                            color=\"inherit\"\r\n                                            startIcon={<ReplyTwoToneIcon color=\"primary\" />}\r\n                                        >\r\n                                            reply\r\n                                        </Button>\r\n                                    </Stack>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Card>\r\n                    </Box>\r\n                </Grid>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nReply.propTypes = {\r\n    commentId: PropTypes.string,\r\n    handleReplayLikes: PropTypes.func,\r\n    onReply: PropTypes.func,\r\n    postId: PropTypes.string,\r\n    reply: PropTypes.object\r\n};\r\n\r\nexport default Reply;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Box,\r\n    Button,\r\n    ButtonBase,\r\n    Card,\r\n    Collapse,\r\n    FormHelperText,\r\n    Grid,\r\n    InputAdornment,\r\n    Menu,\r\n    MenuItem,\r\n    Stack,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\n// third-party\r\nimport * as yup from 'yup';\r\nimport uniqueId from 'lodash/uniqueId';\r\nimport { Controller, FormProvider, useForm, useFormContext } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// project imports\r\nimport Reply from './Reply';\r\nimport Avatar from 'ui-component/extended/Avatar';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\n\r\n// assets\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\r\nimport ThumbUpAltTwoToneIcon from '@mui/icons-material/ThumbUpAltTwoTone';\r\nimport ReplyTwoToneIcon from '@mui/icons-material/ReplyTwoTone';\r\nimport AttachmentRoundedIcon from '@mui/icons-material/AttachmentRounded';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\nconst validationSchema = yup.object().shape({\r\n    name: yup.string().required('Reply Field is Required')\r\n});\r\n\r\n// ==============================|| COMMENT TEXTFIELD ||============================== //\r\n\r\nconst FormInput = ({ bug, label, name, required, ...others }) => {\r\n    const { control } = useFormContext();\r\n\r\n    let isError = false;\r\n    let errorMessage = '';\r\n    if (bug && Object.prototype.hasOwnProperty.call(bug, name)) {\r\n        isError = true;\r\n        errorMessage = bug[name].message;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Controller\r\n                as={TextField}\r\n                name={name}\r\n                control={control}\r\n                defaultValue=\"\"\r\n                label={label}\r\n                fullWidth\r\n                InputLabelProps={{\r\n                    className: required ? 'required-label' : '',\r\n                    required: required || false\r\n                }}\r\n                error={isError}\r\n                {...others}\r\n            />\r\n            {errorMessage && (\r\n                <Grid item xs={12}>\r\n                    <FormHelperText error>{errorMessage}</FormHelperText>\r\n                </Grid>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nFormInput.propTypes = {\r\n    bug: PropTypes.object,\r\n    label: PropTypes.string,\r\n    name: PropTypes.string,\r\n    required: PropTypes.bool\r\n};\r\n\r\n// ==============================|| SOCIAL PROFILE - COMMENT ||============================== //\r\n\r\nconst Comment = ({ comment, handleCommentLikes, handleReplayLikes, postId, replyAdd, user }) => {\r\n    const theme = useTheme();\r\n    const matchesXS = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const [openReply, setOpenReply] = useState(false);\r\n    const handleChangeReply = () => {\r\n        setOpenReply((prev) => !prev);\r\n    };\r\n\r\n    let repliesResult = <></>;\r\n    if (Object.keys(comment).length > 0 && comment.data?.replies && comment.data?.replies.length) {\r\n        repliesResult = comment.data?.replies.map((reply, index) => (\r\n            <Reply\r\n                postId={postId}\r\n                commentId={comment.id}\r\n                key={index}\r\n                onReply={handleChangeReply}\r\n                reply={reply}\r\n                handleReplayLikes={handleReplayLikes}\r\n            />\r\n        ));\r\n    }\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n\r\n    const { handleSubmit, errors, reset } = methods;\r\n    const onSubmit = async (reply) => {\r\n        handleChangeReply();\r\n        const replyId = uniqueId('#REPLY_');\r\n        const newReply = {\r\n            id: replyId,\r\n            profile: user,\r\n            data: {\r\n                comment: reply.name,\r\n                likes: {\r\n                    like: false,\r\n                    value: 0\r\n                },\r\n                replies: []\r\n            }\r\n        };\r\n\r\n        replyAdd(postId, comment.id, newReply);\r\n        reset({ name: '' });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {Object.keys(comment).length > 0 && (\r\n                <Grid item xs={12}>\r\n                    <Card\r\n                        sx={{\r\n                            background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n                            padding: '16px 16px 8px',\r\n                            mt: 1.25\r\n                        }}\r\n                    >\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={1}>\r\n                                    <Grid item>\r\n                                        <Avatar\r\n                                            sx={{ width: 24, height: 24 }}\r\n                                            size=\"sm\"\r\n                                            alt=\"User 1\"\r\n                                            src={\r\n                                                comment.profile &&\r\n                                                comment.profile.avatar &&\r\n                                                avatarImage(`./${comment.profile.avatar}`).default\r\n                                            }\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs zeroMinWidth>\r\n                                        <Grid container alignItems=\"center\" spacing={1}>\r\n                                            <Grid item>\r\n                                                <Typography align=\"left\" variant=\"h5\" component=\"div\">\r\n                                                    {comment.profile.name}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                            <Grid item>\r\n                                                <Typography align=\"left\" variant=\"caption\">\r\n                                                    <FiberManualRecordIcon\r\n                                                        sx={{ width: '10px', height: '10px', opacity: 0.5, m: '0 5px' }}\r\n                                                    />{' '}\r\n                                                    {comment.profile.time}\r\n                                                </Typography>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <ButtonBase sx={{ borderRadius: '12px' }}>\r\n                                            <Avatar\r\n                                                variant=\"rounded\"\r\n                                                sx={{\r\n                                                    ...theme.typography.commonAvatar,\r\n                                                    ...theme.typography.smallAvatar,\r\n                                                    background:\r\n                                                        theme.palette.mode === 'dark'\r\n                                                            ? theme.palette.dark.main\r\n                                                            : theme.palette.secondary.light,\r\n                                                    color:\r\n                                                        theme.palette.mode === 'dark'\r\n                                                            ? theme.palette.dark.light\r\n                                                            : theme.palette.secondary.dark,\r\n                                                    zIndex: 1,\r\n                                                    transition: 'all .2s ease-in-out',\r\n                                                    '&[aria-controls=\"menu-list-grow\"],&:hover': {\r\n                                                        background: theme.palette.secondary.main,\r\n                                                        color: theme.palette.secondary.light\r\n                                                    }\r\n                                                }}\r\n                                                aria-controls=\"menu-comment\"\r\n                                                aria-haspopup=\"true\"\r\n                                                onClick={handleClick}\r\n                                            >\r\n                                                <MoreVertTwoToneIcon fontSize=\"inherit\" />\r\n                                            </Avatar>\r\n                                        </ButtonBase>\r\n                                        <Menu\r\n                                            id=\"menu-comment\"\r\n                                            anchorEl={anchorEl}\r\n                                            keepMounted\r\n                                            open={Boolean(anchorEl)}\r\n                                            onClose={handleClose}\r\n                                            variant=\"selectedMenu\"\r\n                                            anchorOrigin={{\r\n                                                vertical: 'bottom',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                            transformOrigin={{\r\n                                                vertical: 'top',\r\n                                                horizontal: 'right'\r\n                                            }}\r\n                                        >\r\n                                            <MenuItem onClick={handleClose}>Edit</MenuItem>\r\n                                            <MenuItem onClick={handleClose}>Delete</MenuItem>\r\n                                        </Menu>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={12} sx={{ '&.MuiGrid-root': { pt: 1.5 } }}>\r\n                                <Typography align=\"left\" variant=\"body2\">\r\n                                    {comment.data?.comment}\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Stack direction=\"row\" spacing={2} sx={{ color: theme.palette.mode === 'dark' ? 'grey.700' : 'grey.800' }}>\r\n                                    <Button\r\n                                        onClick={() => handleCommentLikes(postId, comment.id)}\r\n                                        variant=\"text\"\r\n                                        color=\"inherit\"\r\n                                        size=\"small\"\r\n                                        startIcon={\r\n                                            <ThumbUpAltTwoToneIcon\r\n                                                color={comment.data?.likes && comment.data?.likes.like ? 'secondary' : 'inherit'}\r\n                                            />\r\n                                        }\r\n                                    >\r\n                                        {comment.data?.likes && comment.data?.likes.value ? comment.data?.likes.value : 0} likes\r\n                                    </Button>\r\n                                    <Button\r\n                                        variant=\"text\"\r\n                                        onClick={handleChangeReply}\r\n                                        color=\"inherit\"\r\n                                        size=\"small\"\r\n                                        startIcon={<ReplyTwoToneIcon color=\"primary\" />}\r\n                                    >\r\n                                        {comment.data?.replies ? comment.data?.replies.length : 0} reply\r\n                                    </Button>\r\n                                </Stack>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Card>\r\n                </Grid>\r\n            )}\r\n            {repliesResult}\r\n            {/* comment - add new replay */}\r\n            <Collapse in={openReply} sx={{ width: '100%' }}>\r\n                <Grid item xs={12} sx={{ pl: { xs: 1, sm: 3 }, pt: 3 }}>\r\n                    <Box\r\n                        sx={{\r\n                            ml: 4.25,\r\n                            [theme.breakpoints.down('md')]: {\r\n                                ml: 0\r\n                            }\r\n                        }}\r\n                    >\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <Grid container spacing={2} alignItems=\"flex-start\">\r\n                                <Grid item sx={{ display: { xs: 'none', sm: 'block' } }}>\r\n                                    <Avatar\r\n                                        sx={{ mt: 1.5 }}\r\n                                        alt=\"User 1\"\r\n                                        src={\r\n                                            comment.profile && comment.profile.avatar && avatarImage(`./${comment.profile.avatar}`).default\r\n                                        }\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs zeroMinWidth sx={{ mt: 1 }}>\r\n                                    <FormProvider {...methods}>\r\n                                        <FormInput\r\n                                            fullWidth\r\n                                            name=\"name\"\r\n                                            label=\"Write a reply...\"\r\n                                            size={matchesXS ? 'small' : 'medium'}\r\n                                            bug={errors}\r\n                                            InputProps={{\r\n                                                label: 'Write a reply...',\r\n                                                startAdornment: (\r\n                                                    <InputAdornment position=\"start\">\r\n                                                        <AttachmentRoundedIcon fontSize=\"small\" />\r\n                                                    </InputAdornment>\r\n                                                )\r\n                                            }}\r\n                                        />\r\n                                    </FormProvider>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <AnimateButton>\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            size={matchesXS ? 'small' : 'large'}\r\n                                            sx={{ mt: 1.5 }}\r\n                                        >\r\n                                            Reply\r\n                                        </Button>\r\n                                    </AnimateButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </Box>\r\n                </Grid>\r\n            </Collapse>\r\n        </>\r\n    );\r\n};\r\n\r\nComment.propTypes = {\r\n    comment: PropTypes.object,\r\n    postId: PropTypes.string,\r\n    user: PropTypes.object,\r\n    commentAdd: PropTypes.func,\r\n    handleCommentLikes: PropTypes.func,\r\n    handlePostLikes: PropTypes.func,\r\n    handleReplayLikes: PropTypes.func,\r\n    post: PropTypes.object,\r\n    replyAdd: PropTypes.func\r\n};\r\n\r\nexport default Comment;\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { ImageListItem, ImageListItemBar } from '@mui/material';\r\nimport MImageList from '@mui/material/ImageList';\r\n\r\n// set image width & height radio\r\nfunction srcset(image, width, height, rows = 1, cols = 1) {\r\n    return `${image}?w=${width * cols}&h=${height * rows}&fit=crop&auto=format 1x,\r\n  ${image}?w=${width * cols}&h=${height * rows}&fit=crop&auto=format&dpr=2 2x`;\r\n}\r\n\r\n// ==============================|| IMAGE LIST/GRID ||============================== //\r\n\r\nconst ImageList = ({ itemData }) => {\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    return (\r\n        <MImageList\r\n            sx={{\r\n                // Promote the list into its own layer in Chrome. This costs memory, but helps keeping high FPS.\r\n                transform: 'translateZ(0)',\r\n                overflowY: 'visible',\r\n                mb: 0\r\n            }}\r\n            gap={8}\r\n        >\r\n            {itemData.map((item) => {\r\n                const cols = item.featured ? 2 : 1;\r\n                const rows = item.featured ? 2 : 1;\r\n\r\n                return (\r\n                    <ImageListItem\r\n                        key={item.img}\r\n                        cols={cols}\r\n                        rows={rows}\r\n                        sx={{ overflow: 'hidden', borderRadius: `${customization.borderRadius}px` }}\r\n                    >\r\n                        <img srcSet={srcset(item.img, 250, 200, rows, cols)} alt={item.title} loading=\"lazy\" />\r\n                        <ImageListItemBar\r\n                            sx={{\r\n                                background: 'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\r\n                            }}\r\n                            title={item.title}\r\n                            position=\"top\"\r\n                            actionPosition=\"left\"\r\n                        />\r\n                    </ImageListItem>\r\n                );\r\n            })}\r\n        </MImageList>\r\n    );\r\n};\r\n\r\nImageList.propTypes = {\r\n    itemData: PropTypes.array\r\n};\r\n\r\nexport default ImageList;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Button,\r\n    ButtonBase,\r\n    CardMedia,\r\n    Collapse,\r\n    FormHelperText,\r\n    Grid,\r\n    IconButton,\r\n    Menu,\r\n    MenuItem,\r\n    Stack,\r\n    TextField,\r\n    Typography,\r\n    useMediaQuery\r\n} from '@mui/material';\r\n\r\n// third-party\r\nimport * as yup from 'yup';\r\nimport uniqueId from 'lodash/uniqueId';\r\nimport { Controller, FormProvider, useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\n\r\n// project imports\r\nimport Comment from './Comment';\r\nimport MainCard from '../MainCard';\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport ImageList from 'ui-component/extended/ImageList';\r\nimport Avatar from 'ui-component/extended/Avatar';\r\n\r\n// assets\r\nimport ShareTwoToneIcon from '@mui/icons-material/ShareTwoTone';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport PeopleAltTwoToneIcon from '@mui/icons-material/PeopleAltTwoTone';\r\nimport ChatTwoToneIcon from '@mui/icons-material/ChatTwoTone';\r\nimport ContentCopyTwoToneIcon from '@mui/icons-material/ContentCopyTwoTone';\r\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\r\nimport ThumbUpAltTwoToneIcon from '@mui/icons-material/ThumbUpAltTwoTone';\r\nimport ChatBubbleTwoToneIcon from '@mui/icons-material/ChatBubbleTwoTone';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\nconst validationSchema = yup.object().shape({\r\n    name: yup.string().required('Comment Field is Required')\r\n});\r\n\r\n// ==============================|| COMMENT TEXTFIELD ||============================== //\r\n\r\nconst FormInput = ({ bug, label, size, fullWidth = true, name, required, ...others }) => {\r\n    let isError = false;\r\n    let errorMessage = '';\r\n    if (bug && Object.prototype.hasOwnProperty.call(bug, name)) {\r\n        isError = true;\r\n        errorMessage = bug[name].message;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Controller\r\n                as={TextField}\r\n                name={name}\r\n                defaultValue=\"\"\r\n                label={label}\r\n                size={size}\r\n                fullWidth={fullWidth}\r\n                InputLabelProps={{\r\n                    className: required ? 'required-label' : '',\r\n                    required: required || false\r\n                }}\r\n                error={isError}\r\n                {...others}\r\n            />\r\n            {errorMessage && (\r\n                <Grid item xs={12}>\r\n                    <FormHelperText error>{errorMessage}</FormHelperText>\r\n                </Grid>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nFormInput.propTypes = {\r\n    bug: PropTypes.object,\r\n    size: PropTypes.string,\r\n    label: PropTypes.string,\r\n    name: PropTypes.string,\r\n    required: PropTypes.bool,\r\n    fullWidth: PropTypes.bool\r\n};\r\n\r\n// ==============================|| SOCIAL PROFILE - POST ||============================== //\r\n\r\nconst Post = ({ commentAdd, handleCommentLikes, handlePostLikes, handleReplayLikes, post, replyAdd }) => {\r\n    const theme = useTheme();\r\n    const { id, data, profile } = post;\r\n\r\n    const customization = useSelector((state) => state.customization);\r\n    const matchesXS = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const [anchorSharedEl, setAnchorSharedEl] = useState(null);\r\n    const handleSharedClick = (event) => {\r\n        setAnchorSharedEl(event.currentTarget);\r\n    };\r\n\r\n    const handleSharedClose = () => {\r\n        setAnchorSharedEl(null);\r\n    };\r\n\r\n    const [openComment, setOpenComment] = useState(!(data.comments && data.comments.length > 0));\r\n    const handleChangeComment = () => {\r\n        setOpenComment((prev) => !prev);\r\n    };\r\n\r\n    let commentsResult = <></>;\r\n\r\n    if (data && data.comments) {\r\n        commentsResult = data.comments.map((comment) => (\r\n            <Comment\r\n                postId={id}\r\n                comment={comment}\r\n                key={comment.id}\r\n                user={profile}\r\n                replyAdd={replyAdd}\r\n                handleCommentLikes={handleCommentLikes}\r\n                handleReplayLikes={handleReplayLikes}\r\n            />\r\n        ));\r\n    }\r\n\r\n    const methods = useForm({\r\n        resolver: yupResolver(validationSchema)\r\n    });\r\n\r\n    const { handleSubmit, errors, reset } = methods;\r\n    const onSubmit = async (comment) => {\r\n        handleChangeComment();\r\n        const commentId = uniqueId('#COMMENT_');\r\n        const newComment = {\r\n            id: commentId,\r\n            profile,\r\n            data: {\r\n                comment: comment.name,\r\n                likes: {\r\n                    like: false,\r\n                    value: 0\r\n                },\r\n                replies: []\r\n            }\r\n        };\r\n        commentAdd(id, newComment);\r\n        reset({ name: '' });\r\n    };\r\n\r\n    return (\r\n        <MainCard>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                    <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={1}>\r\n                        <Grid item>\r\n                            <Avatar alt=\"User 1\" src={profile.avatar && avatarImage(`./${profile.avatar}`).default} />\r\n                        </Grid>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <Grid container alignItems=\"center\" spacing={1}>\r\n                                <Grid item>\r\n                                    <Typography align=\"left\" variant=\"h5\" component=\"div\">\r\n                                        {profile.name}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <Typography align=\"left\" variant=\"caption\">\r\n                                        <FiberManualRecordIcon sx={{ width: '10px', height: '10px', opacity: 0.5, m: '0 5px' }} />{' '}\r\n                                        {profile.time}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <ButtonBase sx={{ borderRadius: '12px' }} onClick={handleClick}>\r\n                                <Avatar\r\n                                    variant=\"rounded\"\r\n                                    sx={{\r\n                                        ...theme.typography.commonAvatar,\r\n                                        ...theme.typography.smallAvatar,\r\n                                        background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.secondary.light,\r\n                                        color: theme.palette.mode === 'dark' ? theme.palette.dark.light : theme.palette.secondary.dark,\r\n                                        zIndex: 1,\r\n                                        transition: 'all .2s ease-in-out',\r\n                                        '&[aria-controls=\"menu-list-grow\"],&:hover': {\r\n                                            background: theme.palette.secondary.main,\r\n                                            color: theme.palette.secondary.light\r\n                                        }\r\n                                    }}\r\n                                    aria-controls=\"menu-post\"\r\n                                    aria-haspopup=\"true\"\r\n                                >\r\n                                    <MoreVertTwoToneIcon fontSize=\"inherit\" />\r\n                                </Avatar>\r\n                            </ButtonBase>\r\n                            <Menu\r\n                                id=\"menu-post\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                                variant=\"selectedMenu\"\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>Edit</MenuItem>\r\n                                <MenuItem onClick={handleClose}>Delete</MenuItem>\r\n                            </Menu>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/* post - content */}\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    sx={{\r\n                        '& > p': {\r\n                            ...theme.typography.body1,\r\n                            mb: 0\r\n                        }\r\n                    }}\r\n                >\r\n                    <ReactMarkdown remarkPlugins={[gfm]}>{data.content}</ReactMarkdown>\r\n                </Grid>\r\n\r\n                {/* post - photo grid */}\r\n                {data && data.images && data.images.length > 0 && (\r\n                    <Grid item xs={12}>\r\n                        <ImageList itemData={data.images} />\r\n                    </Grid>\r\n                )}\r\n\r\n                {/* post - video */}\r\n                {data.video && (\r\n                    <Grid item xs={12} sx={{ '&.MuiGrid-root': { pt: 2 } }}>\r\n                        <CardMedia\r\n                            sx={{\r\n                                borderRadius: `${customization.borderRadius}px`,\r\n                                height: 330,\r\n                                [theme.breakpoints.down('xl')]: {\r\n                                    height: 220\r\n                                }\r\n                            }}\r\n                            component=\"iframe\"\r\n                            src={`https://www.youtube.com/embed/${data.video}`}\r\n                        />\r\n                    </Grid>\r\n                )}\r\n\r\n                {/* post - comment, likes and replay history */}\r\n                <Grid item xs={12}>\r\n                    <Grid\r\n                        container\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"space-between\"\r\n                        spacing={2}\r\n                        sx={{ mt: 0, color: theme.palette.mode === 'dark' ? 'grey.700' : 'grey.800' }}\r\n                    >\r\n                        <Grid item>\r\n                            <Stack direction=\"row\" spacing={2}>\r\n                                <Button\r\n                                    variant=\"text\"\r\n                                    onClick={() => handlePostLikes(id)}\r\n                                    color=\"inherit\"\r\n                                    size=\"small\"\r\n                                    startIcon={\r\n                                        <ThumbUpAltTwoToneIcon color={data && data.likes && data.likes.like ? 'primary' : 'inherit'} />\r\n                                    }\r\n                                >\r\n                                    {data && data.likes && data.likes.value ? data.likes.value : 0}\r\n                                    <Typography color=\"inherit\" sx={{ fontWeight: 500, ml: 0.5, display: { xs: 'none', sm: 'block' } }}>\r\n                                        likes\r\n                                    </Typography>\r\n                                </Button>\r\n                                <Button\r\n                                    onClick={handleChangeComment}\r\n                                    size=\"small\"\r\n                                    variant=\"text\"\r\n                                    color=\"inherit\"\r\n                                    startIcon={<ChatBubbleTwoToneIcon color=\"secondary\" />}\r\n                                >\r\n                                    {data.comments ? data.comments.length : 0} comments\r\n                                </Button>\r\n                            </Stack>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <IconButton onClick={handleSharedClick} size=\"large\">\r\n                                <ShareTwoToneIcon sx={{ width: '1rem', height: '1rem' }} />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-post\"\r\n                                anchorEl={anchorSharedEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorSharedEl)}\r\n                                onClose={handleSharedClose}\r\n                                variant=\"selectedMenu\"\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                                sx={{\r\n                                    '& .MuiSvgIcon-root': {\r\n                                        marginRight: '14px',\r\n                                        fontSize: '1.25rem'\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <MenuItem onClick={handleSharedClose}>\r\n                                    <ShareTwoToneIcon fontSize=\"inherit\" /> Share Now\r\n                                </MenuItem>\r\n                                <MenuItem onClick={handleSharedClose}>\r\n                                    <PeopleAltTwoToneIcon fontSize=\"inherit\" /> Share to Friends\r\n                                </MenuItem>\r\n                                <MenuItem onClick={handleSharedClose}>\r\n                                    <ChatTwoToneIcon fontSize=\"inherit\" /> Send in Messanger\r\n                                </MenuItem>\r\n                                <MenuItem onClick={handleSharedClose}>\r\n                                    <ContentCopyTwoToneIcon fontSize=\"inherit\" /> Copy Link\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                {/* add new comment */}\r\n                <Collapse in={openComment} sx={{ width: '100%' }}>\r\n                    <Grid item xs={12} sx={{ pt: 2 }}>\r\n                        <form onSubmit={handleSubmit(onSubmit)}>\r\n                            <Grid container spacing={2} alignItems=\"flex-start\">\r\n                                <Grid item sx={{ display: { xs: 'none', sm: 'block' } }}>\r\n                                    <Avatar\r\n                                        sx={{ mt: 0.75 }}\r\n                                        alt=\"User 1\"\r\n                                        src={profile.avatar && avatarImage(`./${profile.avatar}`).default}\r\n                                        size=\"xs\"\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs zeroMinWidth>\r\n                                    <FormProvider {...methods}>\r\n                                        <FormInput\r\n                                            fullWidth\r\n                                            name=\"name\"\r\n                                            label=\"Write a comment...\"\r\n                                            size={matchesXS ? 'small' : 'medium'}\r\n                                            bug={errors}\r\n                                        />\r\n                                    </FormProvider>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <AnimateButton>\r\n                                        <Button\r\n                                            type=\"submit\"\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            size={matchesXS ? 'small' : 'large'}\r\n                                            sx={{ mt: 0.5 }}\r\n                                        >\r\n                                            Comment\r\n                                        </Button>\r\n                                    </AnimateButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </Grid>\r\n                </Collapse>\r\n                {commentsResult}\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nPost.propTypes = {\r\n    commentAdd: PropTypes.func,\r\n    handleCommentLikes: PropTypes.func,\r\n    handlePostLikes: PropTypes.func,\r\n    handleReplayLikes: PropTypes.func,\r\n    post: PropTypes.object,\r\n    replyAdd: PropTypes.func\r\n};\r\n\r\nexport default Post;\r\n","import { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, Divider, Grid, IconButton, Link, TextField, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport AnimateButton from 'ui-component/extended/AnimateButton';\r\nimport Posts from 'ui-component/cards/Post';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport axios from 'utils/axios';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport AttachmentTwoToneIcon from '@mui/icons-material/AttachmentTwoTone';\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\nimport InstagramIcon from '@mui/icons-material/Instagram';\r\nimport LayersTwoToneIcon from '@mui/icons-material/LayersTwoTone';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\nimport NavigateNextRoundedIcon from '@mui/icons-material/NavigateNextRounded';\r\nimport PeopleAltTwoToneIcon from '@mui/icons-material/PeopleAltTwoTone';\r\nimport PublicTwoToneIcon from '@mui/icons-material/PublicTwoTone';\r\nimport RecentActorsTwoToneIcon from '@mui/icons-material/RecentActorsTwoTone';\r\n\r\n// ==============================|| SOCIAL PROFILE - POST ||============================== //\r\n\r\nconst Profile = () => {\r\n    const theme = useTheme();\r\n    const [posts, setPosts] = useState([]);\r\n    const getPost = async () => {\r\n        const response = await axios.get('/api/posts/list');\r\n        setPosts(response.data.posts);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPost();\r\n    }, []);\r\n\r\n    const editPost = async (id, commentId) => {\r\n        await axios\r\n            .post('/api/posts/editComment', {\r\n                key: id,\r\n                id: commentId\r\n            })\r\n            .then((response) => {\r\n                setPosts(response.data.posts);\r\n            });\r\n    };\r\n\r\n    const commentAdd = async (id, comment) => {\r\n        await axios\r\n            .post('/api/comments/add', {\r\n                postId: id,\r\n                comment\r\n            })\r\n            .then((response) => {\r\n                setPosts(response.data.posts);\r\n            });\r\n    };\r\n\r\n    const replyAdd = async (postId, commentId, reply) => {\r\n        await axios\r\n            .post('/api/replies/add', {\r\n                postId,\r\n                commentId,\r\n                reply\r\n            })\r\n            .then((response) => {\r\n                setPosts(response.data.posts);\r\n            });\r\n    };\r\n\r\n    const handlePostLikes = async (postId) => {\r\n        await axios\r\n            .post('/api/posts/list/like', {\r\n                postId\r\n            })\r\n            .then((response) => {\r\n                setPosts(response.data.posts);\r\n            });\r\n    };\r\n\r\n    const handleCommentLikes = async (postId, commentId) => {\r\n        await axios\r\n            .post('/api/comments/list/like', {\r\n                postId,\r\n                commentId\r\n            })\r\n            .then((response) => {\r\n                setPosts(response.data.posts);\r\n            });\r\n    };\r\n\r\n    const handleReplayLikes = async (postId, commentId, replayId) => {\r\n        await axios\r\n            .post('/api/replies/list/like', {\r\n                postId,\r\n                commentId,\r\n                replayId\r\n            })\r\n            .then((response) => {\r\n                setPosts(response.data.posts);\r\n            });\r\n    };\r\n\r\n    const sideAvatarSX = {\r\n        borderRadius: '8px',\r\n        width: 48,\r\n        height: 48,\r\n        fontSize: '1.5rem',\r\n        display: 'inline-flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        border: theme.palette.mode === 'dark' ? '1px solid' : 'none',\r\n        '&>svg': {\r\n            width: 24,\r\n            height: 24\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12} sm={12} md={4}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <MainCard>\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing}>\r\n                                <Grid item>\r\n                                    <Box\r\n                                        sx={{\r\n                                            ...sideAvatarSX,\r\n                                            bgcolor: theme.palette.mode === 'dark' ? theme.palette.primary.main + 20 : 'primary.light',\r\n                                            border: theme.palette.mode === 'dark' ? '1px solid' : 'none',\r\n                                            borderColor: 'primary.main',\r\n                                            color: 'primary.dark'\r\n                                        }}\r\n                                    >\r\n                                        <PeopleAltTwoToneIcon />\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs zeroMinWidth>\r\n                                    <Typography variant=\"h3\" color=\"primary\" component=\"div\" sx={{ mb: 0.625 }}>\r\n                                        239k\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\">Friends</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <IconButton size=\"large\">\r\n                                        <NavigateNextRoundedIcon />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider sx={{ margin: '16px 0' }} />\r\n                            <Grid container alignItems=\"center\" spacing={gridSpacing}>\r\n                                <Grid item>\r\n                                    <Box\r\n                                        sx={{\r\n                                            ...sideAvatarSX,\r\n                                            bgcolor: theme.palette.mode === 'dark' ? theme.palette.secondary.main + 20 : 'secondary.light',\r\n                                            borderColor: 'secondary.main',\r\n                                            color: 'secondary.dark'\r\n                                        }}\r\n                                    >\r\n                                        <RecentActorsTwoToneIcon />\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs zeroMinWidth>\r\n                                    <Typography\r\n                                        variant=\"h3\"\r\n                                        sx={{\r\n                                            mb: 0.625,\r\n                                            color: theme.palette.mode === 'dark' ? theme.palette.text.secondary : 'secondary.main'\r\n                                        }}\r\n                                    >\r\n                                        234k\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\">Followers</Typography>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <IconButton size=\"large\">\r\n                                        <NavigateNextRoundedIcon />\r\n                                    </IconButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </MainCard>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <MainCard>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant=\"h4\">About</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Typography variant=\"body2\">\r\n                                        It is a long established fact that a reader will be distracted by the readable content of a page\r\n                                        when looking at its layout.\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Divider sx={{ margin: '16px 0' }} />\r\n                            <Grid\r\n                                container\r\n                                spacing={2}\r\n                                sx={{\r\n                                    '& >div': {\r\n                                        overflow: 'hidden',\r\n                                        textOverflow: 'ellipsis',\r\n                                        whiteSpace: 'nowrap',\r\n                                        display: 'block',\r\n                                        width: '100%'\r\n                                    },\r\n                                    '& a': {\r\n                                        color: theme.palette.grey[700],\r\n\r\n                                        '& svg': {\r\n                                            mr: 1,\r\n                                            verticalAlign: 'bottom'\r\n                                        },\r\n                                        '&:hover': {\r\n                                            color: theme.palette.primary.main,\r\n                                            textDecoration: 'none'\r\n                                        }\r\n                                    }\r\n                                }}\r\n                            >\r\n                                <Grid item xs={12}>\r\n                                    <Link href=\"https://codedthemes.com/\" target=\"_blank\" underline=\"hover\">\r\n                                        <PublicTwoToneIcon color=\"secondary\" /> https://codedthemes.com/\r\n                                    </Link>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Link href=\"https://www.instagram.com/codedthemes\" target=\"_blank\" underline=\"hover\">\r\n                                        <InstagramIcon sx={{ color: theme.palette.orange.dark }} /> https://www.instagram.com/codedthemes\r\n                                    </Link>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Link href=\"https://www.facebook.com/codedthemes\" target=\"_blank\" underline=\"hover\">\r\n                                        <FacebookIcon color=\"primary\" /> https://www.facebook.com/codedthemes\r\n                                    </Link>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Link href=\"https://in.linkedin.com/company/codedthemes\" target=\"_blank\" underline=\"hover\">\r\n                                        <LinkedInIcon sx={{ color: theme.palette.grey[900] }} /> https://in.linkedin.com/company/codedthemes\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </MainCard>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={8}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs={12}>\r\n                        <MainCard>\r\n                            <Grid container spacing={gridSpacing}>\r\n                                <Grid item xs={12}>\r\n                                    <TextField\r\n                                        id=\"outlined-textarea\"\r\n                                        placeholder=\"What’s on your mind, Larry?\"\r\n                                        rows={4}\r\n                                        fullWidth\r\n                                        multiline\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Grid container justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                                        <Grid item>\r\n                                            <Button variant=\"text\" color=\"secondary\" startIcon={<AttachmentTwoToneIcon />}>\r\n                                                Gallery\r\n                                            </Button>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <AnimateButton>\r\n                                                <Button variant=\"contained\" color=\"secondary\" startIcon={<LayersTwoToneIcon />}>\r\n                                                    Post\r\n                                                </Button>\r\n                                            </AnimateButton>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </MainCard>\r\n                    </Grid>\r\n                    {posts &&\r\n                        posts.map((post) => (\r\n                            <Grid key={post.id} item xs={12}>\r\n                                <Posts\r\n                                    key={post.id}\r\n                                    post={post}\r\n                                    editPost={editPost}\r\n                                    renderPost={getPost}\r\n                                    setPosts={setPosts}\r\n                                    commentAdd={commentAdd}\r\n                                    replyAdd={replyAdd}\r\n                                    handlePostLikes={handlePostLikes}\r\n                                    handleCommentLikes={handleCommentLikes}\r\n                                    handleReplayLikes={handleReplayLikes}\r\n                                />\r\n                            </Grid>\r\n                        ))}\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Avatar, Button, Card, Grid, ListItemIcon, Menu, MenuItem, Typography } from '@mui/material';\r\n\r\n// assets\r\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\r\nimport PersonAddTwoToneIcon from '@mui/icons-material/PersonAddTwoTone';\r\nimport PeopleAltTwoToneIcon from '@mui/icons-material/PeopleAltTwoTone';\r\nimport PinDropTwoToneIcon from '@mui/icons-material/PinDropTwoTone';\r\n\r\nimport FavoriteTwoToneIcon from '@mui/icons-material/FavoriteTwoTone';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport GroupTwoToneIcon from '@mui/icons-material/GroupTwoTone';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\n// ==============================|| SOCIAL PROFILE - FOLLOWER CARD ||============================== //\r\n\r\nconst FollowerCard = ({ avatar, follow, location, name }) => {\r\n    const theme = useTheme();\r\n    const avatarProfile = avatar && avatarImage(`./${avatar}`).default;\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event?.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            sx={{\r\n                padding: '16px',\r\n                background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n                border: '1px solid',\r\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[100],\r\n                '&:hover': {\r\n                    border: `1px solid${theme.palette.primary.main}`\r\n                }\r\n            }}\r\n        >\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item>\r\n                            <Avatar alt=\"User 1\" src={avatarProfile} />\r\n                        </Grid>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <Typography\r\n                                variant=\"h5\"\r\n                                component=\"div\"\r\n                                sx={{ overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', display: 'block' }}\r\n                            >\r\n                                {name}\r\n                            </Typography>\r\n                            <Typography\r\n                                variant=\"subtitle2\"\r\n                                sx={{ mt: 0.25, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', display: 'block' }}\r\n                            >\r\n                                <PinDropTwoToneIcon sx={{ mr: '6px', fontSize: '16px', verticalAlign: 'text-top' }} />\r\n                                {location}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <MoreHorizOutlinedIcon\r\n                                fontSize=\"small\"\r\n                                sx={{\r\n                                    color: theme.palette.primary[200],\r\n                                    cursor: 'pointer'\r\n                                }}\r\n                                aria-controls=\"menu-followers-card\"\r\n                                aria-haspopup=\"true\"\r\n                                onClick={handleClick}\r\n                            />\r\n                            <Menu\r\n                                id=\"menu-followers-card\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                                variant=\"selectedMenu\"\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>\r\n                                    <ListItemIcon>\r\n                                        <FavoriteTwoToneIcon fontSize=\"small\" />\r\n                                    </ListItemIcon>\r\n                                    Favorites\r\n                                </MenuItem>\r\n                                <MenuItem onClick={handleClose}>\r\n                                    <ListItemIcon>\r\n                                        <GroupTwoToneIcon fontSize=\"small\" />\r\n                                    </ListItemIcon>\r\n                                    Edit Friend List\r\n                                </MenuItem>\r\n                                <MenuItem onClick={handleClose}>\r\n                                    <ListItemIcon>\r\n                                        <DeleteTwoToneIcon fontSize=\"small\" />\r\n                                    </ListItemIcon>\r\n                                    Removed\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {follow === 2 ? (\r\n                        <Button variant=\"contained\" fullWidth startIcon={<PersonAddTwoToneIcon />}>\r\n                            Follow Back\r\n                        </Button>\r\n                    ) : (\r\n                        <Button variant=\"outlined\" fullWidth startIcon={<PeopleAltTwoToneIcon />}>\r\n                            Followed\r\n                        </Button>\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </Card>\r\n    );\r\n};\r\n\r\nFollowerCard.propTypes = {\r\n    avatar: PropTypes.string,\r\n    follow: PropTypes.number,\r\n    location: PropTypes.string,\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default FollowerCard;\r\n","import { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { Grid, InputAdornment, OutlinedInput, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport FollowerCard from 'ui-component/cards/FollowerCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport axios from 'utils/axios';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport { IconSearch } from '@tabler/icons';\r\n\r\n// ==============================|| SOCIAL PROFILE - FOLLOWERS ||============================== //\r\n\r\nconst Followers = () => {\r\n    const [followers, setFollowers] = useState([]);\r\n    const getFollowers = async () => {\r\n        const response = await axios.get('/api/followers/list');\r\n        setFollowers(response.data.followers);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getFollowers();\r\n    }, []);\r\n\r\n    const [search, setSearch] = useState('');\r\n    const handleSearch = async (event) => {\r\n        const newString = event?.target.value;\r\n        setSearch(newString);\r\n\r\n        if (newString) {\r\n            await axios\r\n                .post('/api/followers/filter', {\r\n                    key: newString\r\n                })\r\n                .then((response) => {\r\n                    setFollowers(response.data.results);\r\n                });\r\n        } else {\r\n            getFollowers();\r\n        }\r\n    };\r\n\r\n    let followersResult = <></>;\r\n    if (followers) {\r\n        followersResult = followers.map((follower, index) => (\r\n            <Grid key={index} item xs={12} sm={6} md={4} lg={3}>\r\n                <FollowerCard {...follower} />\r\n            </Grid>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <MainCard\r\n            title={\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\">Followers</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <OutlinedInput\r\n                            size=\"small\"\r\n                            id=\"input-search-user-profile\"\r\n                            placeholder=\"Search Followers\"\r\n                            value={search}\r\n                            onChange={handleSearch}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <IconSearch stroke={1.5} size=\"1rem\" />\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n        >\r\n            <Grid container direction=\"row\" spacing={gridSpacing}>\r\n                {followersResult}\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default Followers;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Avatar, Button, Card, Grid, IconButton, ListItemIcon, Menu, MenuItem, Typography, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\r\nimport PinDropTwoToneIcon from '@mui/icons-material/PinDropTwoTone';\r\nimport VideoCallTwoToneIcon from '@mui/icons-material/VideoCallTwoTone';\r\nimport ChatBubbleTwoToneIcon from '@mui/icons-material/ChatBubbleTwoTone';\r\n\r\nimport FavoriteTwoToneIcon from '@mui/icons-material/FavoriteTwoTone';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport GroupTwoToneIcon from '@mui/icons-material/GroupTwoTone';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\n// ==============================|| SOCIAL PROFILE - FRIENDS CARD ||============================== //\r\n\r\nconst FriendsCard = ({ avatar, location, name }) => {\r\n    const theme = useTheme();\r\n\r\n    const avatarProfile = avatar && avatarImage(`./${avatar}`).default;\r\n\r\n    const btnSX = {\r\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[200],\r\n        background: theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.background.paper\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event?.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            sx={{\r\n                p: 2,\r\n                background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n                border: '1px solid',\r\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[100],\r\n                '&:hover': {\r\n                    border: `1px solid${theme.palette.primary.main}`\r\n                }\r\n            }}\r\n        >\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item>\r\n                            <Avatar alt=\"User 1\" src={avatarProfile} />\r\n                        </Grid>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <Typography\r\n                                variant=\"h5\"\r\n                                sx={{ overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', display: 'block' }}\r\n                            >\r\n                                {name}\r\n                            </Typography>\r\n                            <Typography\r\n                                variant=\"subtitle2\"\r\n                                sx={{ mt: 0.5, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', display: 'block' }}\r\n                            >\r\n                                <PinDropTwoToneIcon fontSize=\"inherit\" sx={{ mr: 0.5, fontSize: '0.875rem', verticalAlign: 'text-top' }} />\r\n                                {location}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <IconButton size=\"small\" sx={{ mt: -0.75, mr: -0.75 }}>\r\n                                <MoreHorizOutlinedIcon\r\n                                    fontSize=\"small\"\r\n                                    color=\"primary\"\r\n                                    aria-controls=\"menu-friend-card\"\r\n                                    aria-haspopup=\"true\"\r\n                                    sx={{ opacity: 0.6 }}\r\n                                    onClick={handleClick}\r\n                                />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-friend-card\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                                variant=\"selectedMenu\"\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>\r\n                                    <ListItemIcon>\r\n                                        <FavoriteTwoToneIcon fontSize=\"small\" />\r\n                                    </ListItemIcon>\r\n                                    Favorites\r\n                                </MenuItem>\r\n                                <MenuItem onClick={handleClose}>\r\n                                    <ListItemIcon>\r\n                                        <GroupTwoToneIcon fontSize=\"small\" />\r\n                                    </ListItemIcon>\r\n                                    Edit Friend List\r\n                                </MenuItem>\r\n                                <MenuItem onClick={handleClose}>\r\n                                    <ListItemIcon>\r\n                                        <DeleteTwoToneIcon fontSize=\"small\" />\r\n                                    </ListItemIcon>\r\n                                    Unfriend\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <Tooltip title=\"Video Call\" placement=\"top\">\r\n                                <Button variant=\"outlined\" color=\"secondary\" fullWidth sx={btnSX}>\r\n                                    <VideoCallTwoToneIcon fontSize=\"small\" />\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Tooltip title=\"Message\" placement=\"top\">\r\n                                <Button variant=\"outlined\" fullWidth sx={btnSX}>\r\n                                    <ChatBubbleTwoToneIcon fontSize=\"small\" />\r\n                                </Button>\r\n                            </Tooltip>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Card>\r\n    );\r\n};\r\n\r\nFriendsCard.propTypes = {\r\n    avatar: PropTypes.string,\r\n    location: PropTypes.string,\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default FriendsCard;\r\n","import { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Grid, InputAdornment, OutlinedInput, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport FriendsCard from 'ui-component/cards/FriendsCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport axios from 'utils/axios';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport { IconSearch } from '@tabler/icons';\r\n\r\n// ==============================|| SOCIAL PROFILE - FRIENDS ||============================== //\r\n\r\nconst Friends = () => {\r\n    const theme = useTheme();\r\n    const [friends, setFriends] = useState([]);\r\n    const getFriends = async () => {\r\n        const response = await axios.get('/api/friends/list');\r\n        setFriends(response.data.friends);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getFriends();\r\n    }, []);\r\n\r\n    let friendsResult = <></>;\r\n    if (friends) {\r\n        friendsResult = friends.map((friend, index) => (\r\n            <Grid key={index} item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n                <FriendsCard {...friend} />\r\n            </Grid>\r\n        ));\r\n    }\r\n\r\n    const [search, setSearch] = useState('');\r\n    const handleSearch = async (event) => {\r\n        const newString = event?.target.value;\r\n        setSearch(newString);\r\n\r\n        if (newString) {\r\n            await axios\r\n                .post('/api/friends/filter', {\r\n                    key: newString\r\n                })\r\n                .then((response) => {\r\n                    setFriends(response.data.results);\r\n                });\r\n        } else {\r\n            getFriends();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <MainCard\r\n            title={\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\">\r\n                            Friends{' '}\r\n                            <Typography variant=\"h3\" component=\"span\" sx={{ color: theme.palette.grey[300], fontWeight: 500 }}>\r\n                                (463)\r\n                            </Typography>\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <OutlinedInput\r\n                            size=\"small\"\r\n                            id=\"input-search-user-profile\"\r\n                            placeholder=\"Search\"\r\n                            value={search}\r\n                            onChange={handleSearch}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <IconSearch stroke={1.5} size=\"1rem\" />\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n        >\r\n            <Grid container direction=\"row\" spacing={gridSpacing}>\r\n                {friendsResult}\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default Friends;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Card, CardContent, CardMedia, Grid, Menu, MenuItem, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from 'ui-component/extended/Avatar';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport MoreVertTwoToneIcon from '@mui/icons-material/MoreVertTwoTone';\r\nimport EventTwoToneIcon from '@mui/icons-material/EventTwoTone';\r\n\r\nconst backImage = require.context('assets/images/profile', true);\r\n\r\n// ==============================|| SOCIAL PROFILE - GALLERY CARD ||============================== //\r\n\r\nconst GalleryCard = ({ dateTime, image, title }) => {\r\n    const theme = useTheme();\r\n    const backProfile = image && backImage(`./${image}`).default;\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event?.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            sx={{\r\n                background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n                border: theme.palette.mode === 'dark' ? 'none' : '1px solid',\r\n                borderColor: theme.palette.grey[100]\r\n            }}\r\n        >\r\n            <CardMedia component=\"img\" image={backProfile} title=\"Slider5 image\" />\r\n            <CardContent sx={{ p: 2, pb: '16px !important' }}>\r\n                <Grid container spacing={gridSpacing}>\r\n                    <Grid item xs zeroMinWidth>\r\n                        <Typography\r\n                            variant=\"h5\"\r\n                            sx={{\r\n                                overflow: 'hidden',\r\n                                textOverflow: 'ellipsis',\r\n                                whiteSpace: 'nowrap',\r\n                                mb: 0.5\r\n                            }}\r\n                        >\r\n                            {title}\r\n                        </Typography>\r\n                        <Typography variant=\"caption\" sx={{ mt: 1, fontSize: '12px' }}>\r\n                            <EventTwoToneIcon sx={{ mr: 0.5, fontSize: '0.875rem', verticalAlign: 'text-top' }} />\r\n                            {dateTime}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <ButtonBase sx={{ borderRadius: '12px' }} onClick={handleClick}>\r\n                            <Avatar\r\n                                variant=\"rounded\"\r\n                                sx={{\r\n                                    ...theme.typography.commonAvatar,\r\n                                    ...theme.typography.mediumAvatar,\r\n                                    background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.secondary.light,\r\n                                    color: theme.palette.mode === 'dark' ? theme.palette.dark.light : theme.palette.secondary.dark,\r\n                                    zIndex: 1,\r\n                                    transition: 'all .2s ease-in-out',\r\n                                    '&[aria-controls=\"menu-list-grow\"],&:hover': {\r\n                                        background: theme.palette.secondary.main,\r\n                                        color: theme.palette.secondary.light\r\n                                    }\r\n                                }}\r\n                                aria-controls=\"menu-post\"\r\n                                aria-haspopup=\"true\"\r\n                            >\r\n                                <MoreVertTwoToneIcon fontSize=\"inherit\" />\r\n                            </Avatar>\r\n                        </ButtonBase>\r\n\r\n                        <Menu\r\n                            id=\"menu-gallery-card\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                            variant=\"selectedMenu\"\r\n                            anchorOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right'\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right'\r\n                            }}\r\n                        >\r\n                            <MenuItem onClick={handleClose}> Remove Tag</MenuItem>\r\n                            <MenuItem onClick={handleClose}> Download</MenuItem>\r\n                            <MenuItem onClick={handleClose}> Make Profile Picture </MenuItem>\r\n                            <MenuItem onClick={handleClose}> Make Cover Photo </MenuItem>\r\n                            <MenuItem onClick={handleClose}> Find Support or Report Photo </MenuItem>\r\n                        </Menu>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n};\r\n\r\nGalleryCard.propTypes = {\r\n    dateTime: PropTypes.string,\r\n    image: PropTypes.string,\r\n    title: PropTypes.string\r\n};\r\n\r\nexport default GalleryCard;\r\n","import { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { Button, Grid, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport GalleryCard from 'ui-component/cards/GalleryCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport axios from 'utils/axios';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| SOCIAL PROFILE - GALLERY ||============================== //\r\n\r\nconst Gallery = () => {\r\n    const [gallery, setGallery] = useState([]);\r\n    const getGallery = async () => {\r\n        const response = await axios.get('/api/gallery/list');\r\n        setGallery(response.data.gallery);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getGallery();\r\n    }, []);\r\n\r\n    let galleryResult = <></>;\r\n    if (gallery) {\r\n        galleryResult = gallery.map((item, index) => (\r\n            <Grid key={index} item xs={12} sm={6} md={4} lg={3}>\r\n                <GalleryCard {...item} />\r\n            </Grid>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <MainCard\r\n            title={\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\">Gallery</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button variant=\"contained\" color=\"secondary\">\r\n                            Add Photos\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n        >\r\n            <Grid container direction=\"row\" spacing={gridSpacing}>\r\n                {galleryResult}\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default Gallery;\r\n","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Avatar, Button, Card, Grid, IconButton, ListItemIcon, Menu, MenuItem, Typography } from '@mui/material';\r\n\r\n// project import\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport MoreHorizOutlinedIcon from '@mui/icons-material/MoreHorizOutlined';\r\nimport FavoriteTwoToneIcon from '@mui/icons-material/FavoriteTwoTone';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport GroupTwoToneIcon from '@mui/icons-material/GroupTwoTone';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\n// ==============================|| SOCIAL PROFILE - FRIEND REQUEST CARD ||============================== //\r\n\r\nconst FriendRequestCard = ({ avatar, name, mutual }) => {\r\n    const theme = useTheme();\r\n    const avatarProfile = avatar && avatarImage(`./${avatar}`).default;\r\n\r\n    const btnSX = {\r\n        borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[200],\r\n        background: theme.palette.mode === 'dark' ? theme.palette.dark.dark : theme.palette.background.paper\r\n    };\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event?.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <Card\r\n            sx={{\r\n                p: 2,\r\n                background: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[50],\r\n                border: '1px solid',\r\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.grey[100],\r\n                '&:hover': {\r\n                    border: `1px solid${theme.palette.primary.main}`\r\n                }\r\n            }}\r\n        >\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item>\r\n                            <Avatar alt=\"User 1\" src={avatarProfile} />\r\n                        </Grid>\r\n                        <Grid item xs zeroMinWidth>\r\n                            <Typography\r\n                                variant=\"h5\"\r\n                                sx={{ overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', display: 'block' }}\r\n                            >\r\n                                {name}\r\n                            </Typography>\r\n                            <Typography\r\n                                variant=\"subtitle2\"\r\n                                sx={{ mt: 0.5, overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap', display: 'block' }}\r\n                            >\r\n                                {mutual} mutual friends\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <IconButton size=\"small\" sx={{ mt: -0.75, mr: -0.75 }}>\r\n                                <MoreHorizOutlinedIcon\r\n                                    fontSize=\"small\"\r\n                                    color=\"primary\"\r\n                                    aria-controls=\"menu-friend-card\"\r\n                                    aria-haspopup=\"true\"\r\n                                    sx={{ opacity: 0.6 }}\r\n                                    onClick={handleClick}\r\n                                />\r\n                            </IconButton>\r\n                            <Menu\r\n                                id=\"menu-friend-card\"\r\n                                anchorEl={anchorEl}\r\n                                keepMounted\r\n                                open={Boolean(anchorEl)}\r\n                                onClose={handleClose}\r\n                                variant=\"selectedMenu\"\r\n                                anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                                transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right'\r\n                                }}\r\n                            >\r\n                                <MenuItem onClick={handleClose}>\r\n                                    <ListItemIcon>\r\n                                        <FavoriteTwoToneIcon fontSize=\"small\" />\r\n                                    </ListItemIcon>\r\n                                    Favorites\r\n                                </MenuItem>\r\n                                <MenuItem onClick={handleClose}>\r\n                                    <ListItemIcon>\r\n                                        <GroupTwoToneIcon fontSize=\"small\" />\r\n                                    </ListItemIcon>\r\n                                    Edit Friend List\r\n                                </MenuItem>\r\n                                <MenuItem onClick={handleClose}>\r\n                                    <ListItemIcon>\r\n                                        <DeleteTwoToneIcon fontSize=\"small\" />\r\n                                    </ListItemIcon>\r\n                                    Unfriend\r\n                                </MenuItem>\r\n                            </Menu>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                            <Button variant=\"outlined\" fullWidth sx={btnSX}>\r\n                                Confirm\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Button variant=\"outlined\" fullWidth color=\"error\" sx={btnSX}>\r\n                                Delete\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </Card>\r\n    );\r\n};\r\n\r\nFriendRequestCard.propTypes = {\r\n    avatar: PropTypes.string,\r\n    mutual: PropTypes.number,\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default FriendRequestCard;\r\n","import { useState, useEffect } from 'react';\r\n\r\n// material-ui\r\nimport { Grid, InputAdornment, OutlinedInput, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport FriendRequestCard from 'ui-component/cards/FriendRequestCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport axios from 'utils/axios';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport { IconSearch } from '@tabler/icons';\r\n\r\n// ==============================|| SOCIAL PROFILE - FRIEND REQUEST ||============================== //\r\n\r\nconst FriendRequest = () => {\r\n    const [friendRequest, setFriendRequest] = useState([]);\r\n\r\n    const [search, setSearch] = useState('');\r\n\r\n    const getFriendRequest = async () => {\r\n        const response = await axios.get('/api/friend-request/list');\r\n        setFriendRequest(response.data.friends);\r\n    };\r\n\r\n    const handleSearch = async (event) => {\r\n        const newString = event?.target.value;\r\n        setSearch(newString);\r\n\r\n        if (newString) {\r\n            await axios\r\n                .post('/api/friend-request/filter', {\r\n                    key: newString\r\n                })\r\n                .then((response) => {\r\n                    setFriendRequest(response.data.results);\r\n                });\r\n        } else {\r\n            getFriendRequest();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getFriendRequest();\r\n    }, []);\r\n\r\n    let friendRequestResult = <></>;\r\n    if (friendRequest) {\r\n        friendRequestResult = friendRequest.map((friend, index) => (\r\n            <Grid key={index} item xs={12} sm={6} md={4} lg={3}>\r\n                <FriendRequestCard {...friend} />\r\n            </Grid>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <MainCard\r\n            title={\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\">Friend Request</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <OutlinedInput\r\n                            size=\"small\"\r\n                            id=\"input-search-user-profile\"\r\n                            placeholder=\"Search Friends\"\r\n                            value={search}\r\n                            onChange={handleSearch}\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <IconSearch stroke={1.5} size=\"1rem\" />\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n        >\r\n            <Grid container direction=\"row\" spacing={gridSpacing}>\r\n                {friendRequestResult}\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default FriendRequest;\r\n","import PropTypes from 'prop-types';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiChip from '@mui/material/Chip';\r\n\r\n// ==============================|| CHIP ||============================== //\r\n\r\nconst Chip = ({ chipcolor, disabled, variant, sx = {}, ...others }) => {\r\n    const theme = useTheme();\r\n\r\n    let defaultSX = {\r\n        color: theme.palette.mode === 'dark' ? theme.palette.primary.light : theme.palette.primary.main,\r\n        bgcolor: theme.palette.mode === 'dark' ? theme.palette.primary.main : theme.palette.primary.light,\r\n        ':hover': {\r\n            color: theme.palette.primary.light,\r\n            bgcolor: theme.palette.mode === 'dark' ? theme.palette.primary.dark + 90 : theme.palette.primary.dark\r\n        }\r\n    };\r\n\r\n    let outlineSX = {\r\n        color: theme.palette.primary.main,\r\n        bgcolor: 'transparent',\r\n        border: '1px solid',\r\n        borderColor: theme.palette.primary.main,\r\n        ':hover': {\r\n            color: theme.palette.mode === 'dark' ? theme.palette.primary.light : theme.palette.primary.light,\r\n            bgcolor: theme.palette.mode === 'dark' ? theme.palette.primary.main : theme.palette.primary.dark\r\n        }\r\n    };\r\n\r\n    switch (chipcolor) {\r\n        case 'secondary':\r\n            if (variant === 'outlined')\r\n                outlineSX = {\r\n                    color: theme.palette.secondary.main,\r\n                    bgcolor: 'transparent',\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.secondary.main,\r\n                    ':hover': {\r\n                        color: theme.palette.mode === 'dark' ? theme.palette.secondary.light : theme.palette.secondary.main,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.secondary.dark : theme.palette.secondary.light\r\n                    }\r\n                };\r\n            else\r\n                defaultSX = {\r\n                    color: theme.palette.mode === 'dark' ? theme.palette.secondary.light : theme.palette.secondary.main,\r\n                    bgcolor: theme.palette.mode === 'dark' ? theme.palette.secondary.dark : theme.palette.secondary.light,\r\n                    ':hover': {\r\n                        color: theme.palette.secondary.light,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.secondary.dark + 90 : theme.palette.secondary.main\r\n                    }\r\n                };\r\n            break;\r\n        case 'success':\r\n            if (variant === 'outlined')\r\n                outlineSX = {\r\n                    color: theme.palette.success.dark,\r\n                    bgcolor: 'transparent',\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.success.dark,\r\n                    ':hover': {\r\n                        color: theme.palette.mode === 'dark' ? theme.palette.success.light : theme.palette.success.dark,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.success.dark : theme.palette.success.light + 60\r\n                    }\r\n                };\r\n            else\r\n                defaultSX = {\r\n                    color: theme.palette.mode === 'dark' ? theme.palette.success.light : theme.palette.success.dark,\r\n                    bgcolor: theme.palette.mode === 'dark' ? theme.palette.success.dark : theme.palette.success.light + 60,\r\n                    ':hover': {\r\n                        color: theme.palette.success.light,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.success.dark + 90 : theme.palette.success.dark\r\n                    }\r\n                };\r\n            break;\r\n        case 'error':\r\n            if (variant === 'outlined')\r\n                outlineSX = {\r\n                    color: theme.palette.error.main,\r\n                    bgcolor: 'transparent',\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.error.main,\r\n                    ':hover': {\r\n                        color: theme.palette.mode === 'dark' ? theme.palette.error.light : theme.palette.error.dark,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.error.dark : theme.palette.error.light\r\n                    }\r\n                };\r\n            else\r\n                defaultSX = {\r\n                    color: theme.palette.mode === 'dark' ? theme.palette.error.light : theme.palette.error.dark,\r\n                    bgcolor: theme.palette.mode === 'dark' ? theme.palette.error.dark : theme.palette.error.light + 60,\r\n                    ':hover': {\r\n                        color: theme.palette.error.light,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.error.dark + 90 : theme.palette.error.dark\r\n                    }\r\n                };\r\n            break;\r\n        case 'orange':\r\n            if (variant === 'outlined')\r\n                outlineSX = {\r\n                    color: theme.palette.orange?.dark,\r\n                    bgcolor: 'transparent',\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.orange?.main,\r\n                    ':hover': {\r\n                        color: theme.palette.orange?.dark,\r\n                        bgcolor: theme.palette.orange?.light\r\n                    }\r\n                };\r\n            else\r\n                defaultSX = {\r\n                    color: theme.palette.orange?.dark,\r\n                    bgcolor: theme.palette.orange?.light,\r\n                    ':hover': {\r\n                        color: theme.palette.orange?.light,\r\n                        bgcolor: theme.palette.orange?.dark\r\n                    }\r\n                };\r\n            break;\r\n        case 'warning':\r\n            if (variant === 'outlined')\r\n                outlineSX = {\r\n                    color: theme.palette.warning.dark,\r\n                    bgcolor: 'transparent',\r\n                    border: '1px solid',\r\n                    borderColor: theme.palette.warning.dark,\r\n                    ':hover': {\r\n                        color: theme.palette.warning.dark,\r\n                        bgcolor: theme.palette.warning.light\r\n                    }\r\n                };\r\n            else\r\n                defaultSX = {\r\n                    color: theme.palette.warning.dark,\r\n                    bgcolor: theme.palette.warning.light,\r\n                    ':hover': {\r\n                        color: theme.palette.warning.light,\r\n                        bgcolor: theme.palette.mode === 'dark' ? theme.palette.warning.dark + 90 : theme.palette.warning.dark\r\n                    }\r\n                };\r\n            break;\r\n        default:\r\n    }\r\n\r\n    if (disabled) {\r\n        if (variant === 'outlined')\r\n            outlineSX = {\r\n                color: theme.palette.grey[500],\r\n                bgcolor: 'transparent',\r\n                border: '1px solid',\r\n                borderColor: theme.palette.grey[500],\r\n                ':hover': {\r\n                    color: theme.palette.grey[500],\r\n                    bgcolor: 'transparent'\r\n                }\r\n            };\r\n        else\r\n            defaultSX = {\r\n                color: theme.palette.grey[500],\r\n                bgcolor: theme.palette.grey[50],\r\n                ':hover': {\r\n                    color: theme.palette.grey[500],\r\n                    bgcolor: theme.palette.grey[50]\r\n                }\r\n            };\r\n    }\r\n\r\n    let SX = defaultSX;\r\n    if (variant === 'outlined') {\r\n        SX = outlineSX;\r\n    }\r\n\r\n    SX = { ...SX, ...sx };\r\n    return <MuiChip {...others} sx={SX} />;\r\n};\r\n\r\nChip.propTypes = {\r\n    sx: PropTypes.object,\r\n    chipcolor: PropTypes.string,\r\n    variant: PropTypes.string,\r\n    disabled: PropTypes.bool\r\n};\r\n\r\nexport default Chip;\r\n","// material-ui\r\nimport Skeleton from '@mui/material/Skeleton';\r\n\r\n// ==============================|| SKELETON IMAGE CARD ||============================== //\r\n\r\nconst ImagePlaceholder = ({ ...others }) => <Skeleton variant=\"rectangular\" {...others} animation=\"wave\" />;\r\n\r\nexport default ImagePlaceholder;\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link, useParams } from 'react-router-dom';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Button, CardMedia, Grid, Tab, Tabs, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport Profile from './Profile';\r\nimport Followers from './Followers';\r\nimport Friends from './Friends';\r\nimport Gallery from './Gallery';\r\nimport FriendRequest from './FriendRequest';\r\nimport Avatar from 'ui-component/extended/Avatar';\r\nimport Chip from 'ui-component/extended/Chip';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport ImagePlaceholder from 'ui-component/cards/Skeleton/ImagePlaceholder';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport { IconFriends, IconInbox, IconPhoto, IconUserPlus, IconUsers } from '@tabler/icons';\r\nimport PersonAddTwoToneIcon from '@mui/icons-material/PersonAddTwoTone';\r\n\r\nimport User1 from 'assets/images/profile/img-user.png';\r\nimport Cover from 'assets/images/profile/img-profile-bg.png';\r\n\r\nfunction TabPanel({ children, value, index, ...other }) {\r\n    return (\r\n        <div role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} aria-labelledby={`simple-tab-${index}`} {...other}>\r\n            {value === index && (\r\n                <Box\r\n                    sx={{\r\n                        p: 0\r\n                    }}\r\n                >\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`\r\n    };\r\n}\r\n\r\nconst tabOptions = [\r\n    {\r\n        to: '/user/social-profile/posts',\r\n        icon: <IconInbox stroke={1.5} size=\"1.1rem\" />,\r\n        label: 'Profile'\r\n    },\r\n    {\r\n        to: '/user/social-profile/follower',\r\n        icon: <IconUsers stroke={1.5} size=\"1.1rem\" />,\r\n        label: 'Followers'\r\n    },\r\n    {\r\n        to: '/user/social-profile/friends',\r\n        icon: <IconFriends stroke={1.5} size=\"1.1rem\" />,\r\n        label: (\r\n            <>\r\n                friends <Chip label=\"100\" size=\"small\" chipcolor=\"secondary\" sx={{ ml: 1.5 }} />\r\n            </>\r\n        )\r\n    },\r\n    {\r\n        to: '/user/social-profile/gallery',\r\n        icon: <IconPhoto stroke={1.5} size=\"1.1rem\" />,\r\n        label: 'Gallery'\r\n    },\r\n    {\r\n        to: '/user/social-profile/friend-request',\r\n        icon: <IconUserPlus stroke={1.5} size=\"1.1rem\" />,\r\n        label: 'Friend Request'\r\n    }\r\n];\r\n\r\n// ==============================|| SOCIAL PROFILE ||============================== //\r\n\r\nconst SocialProfile = () => {\r\n    const theme = useTheme();\r\n    const customization = useSelector((state) => state.customization);\r\n\r\n    const { tab } = useParams();\r\n\r\n    let selectedTab = 0;\r\n    switch (tab) {\r\n        case 'follower':\r\n            selectedTab = 1;\r\n            break;\r\n        case 'friends':\r\n            selectedTab = 2;\r\n            break;\r\n        case 'gallery':\r\n            selectedTab = 3;\r\n            break;\r\n        case 'friend-request':\r\n            selectedTab = 4;\r\n            break;\r\n        case 'posts':\r\n        default:\r\n            selectedTab = 0;\r\n    }\r\n    const [value, setValue] = useState(selectedTab);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const [isLoading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    return (\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12}>\r\n                <MainCard\r\n                    contentSX={{\r\n                        p: 1.5,\r\n                        paddingBottom: '0px !important',\r\n                        [theme.breakpoints.down('lg')]: {\r\n                            textAlign: 'center'\r\n                        }\r\n                    }}\r\n                >\r\n                    {isLoading ? (\r\n                        <ImagePlaceholder\r\n                            sx={{\r\n                                borderRadius: `${customization.borderRadius}px`,\r\n                                overflow: 'hidden',\r\n                                mb: 3,\r\n                                height: { xs: 85, sm: 150, md: 260 }\r\n                            }}\r\n                        />\r\n                    ) : (\r\n                        <CardMedia\r\n                            component=\"img\"\r\n                            image={Cover}\r\n                            sx={{ borderRadius: `${customization.borderRadius}px`, overflow: 'hidden', mb: 3 }}\r\n                        />\r\n                    )}\r\n                    <Grid container spacing={gridSpacing}>\r\n                        <Grid item xs={12} md={3}>\r\n                            {isLoading ? (\r\n                                <ImagePlaceholder\r\n                                    sx={{\r\n                                        margin: '-70px 0 0 auto',\r\n                                        borderRadius: '16px',\r\n                                        [theme.breakpoints.down('lg')]: {\r\n                                            margin: '-70px auto 0'\r\n                                        },\r\n                                        [theme.breakpoints.down('md')]: {\r\n                                            margin: '-60px auto 0'\r\n                                        },\r\n                                        width: { xs: 72, sm: 100, md: 140 },\r\n                                        height: { xs: 72, sm: 100, md: 140 }\r\n                                    }}\r\n                                />\r\n                            ) : (\r\n                                <Avatar\r\n                                    alt=\"User 1\"\r\n                                    src={User1}\r\n                                    sx={{\r\n                                        margin: '-70px 0 0 auto',\r\n                                        borderRadius: '16px',\r\n                                        [theme.breakpoints.down('lg')]: {\r\n                                            margin: '-70px auto 0'\r\n                                        },\r\n                                        [theme.breakpoints.down('md')]: {\r\n                                            margin: '-60px auto 0'\r\n                                        },\r\n                                        width: { xs: 72, sm: 100, md: 140 },\r\n                                        height: { xs: 72, sm: 100, md: 140 }\r\n                                    }}\r\n                                />\r\n                            )}\r\n                        </Grid>\r\n                        <Grid item xs={12} md={9}>\r\n                            <Grid container spacing={gridSpacing}>\r\n                                <Grid item xs={12} md={4}>\r\n                                    <Typography variant=\"h5\">John Doe123</Typography>\r\n                                    <Typography variant=\"subtitle2\">Android Developer</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} md={8}>\r\n                                    <Grid\r\n                                        container\r\n                                        spacing={1}\r\n                                        sx={{\r\n                                            justifyContent: 'flex-end',\r\n                                            [theme.breakpoints.down('lg')]: {\r\n                                                justifyContent: 'center'\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <Grid item>\r\n                                            <Button variant=\"outlined\">Message</Button>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            <Button variant=\"contained\" startIcon={<PersonAddTwoToneIcon />}>\r\n                                                Send Request\r\n                                            </Button>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container justifyContent=\"flex-end\">\r\n                                <Tabs\r\n                                    value={value}\r\n                                    variant=\"scrollable\"\r\n                                    onChange={handleChange}\r\n                                    sx={{\r\n                                        marginTop: 2.5,\r\n                                        '& .MuiTabs-flexContainer': {\r\n                                            border: 'none'\r\n                                        },\r\n                                        '& a': {\r\n                                            minHeight: 'auto',\r\n                                            minWidth: 10,\r\n                                            py: 1.5,\r\n                                            px: 1,\r\n                                            mr: 2.25,\r\n                                            color: 'grey.700',\r\n                                            display: 'flex',\r\n                                            flexDirection: 'row',\r\n                                            alignItems: 'center',\r\n                                            justifyContent: 'center'\r\n                                        },\r\n                                        '& a.Mui-selected': {\r\n                                            color: 'primary.main'\r\n                                        },\r\n                                        '& a > svg': {\r\n                                            marginBottom: '4px !important',\r\n                                            mr: 1.25\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    {tabOptions.map((option, index) => (\r\n                                        <Tab\r\n                                            key={index}\r\n                                            component={Link}\r\n                                            to={option.to}\r\n                                            icon={option.icon}\r\n                                            label={option.label}\r\n                                            {...a11yProps(index)}\r\n                                        />\r\n                                    ))}\r\n                                </Tabs>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </MainCard>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TabPanel value={value} index={0}>\r\n                    <Profile />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    <Followers />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                    <Friends />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={3}>\r\n                    <Gallery />\r\n                </TabPanel>\r\n                <TabPanel value={value} index={4}>\r\n                    <FriendRequest />\r\n                </TabPanel>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default SocialProfile;\r\n"],"sourceRoot":""}